<sequence_node size='4'>
  <function_declaration_node name='g' qualifier='require' type='integer'>
    <args>
      <sequence_node size='1'>
        <variable_definition_node identifier='n' qualifier='private' type='string'>
        </variable_definition_node>
      </sequence_node>
    </args>
  </function_declaration_node>
  <function_definition_node name='f' qualifier='private' type='integer'>
    <args>
      <sequence_node size='1'>
        <variable_definition_node identifier='s' qualifier='private' type='string'>
        </variable_definition_node>
      </sequence_node>
    </args>
    <default-return-value>
      <integer_node>10</integer_node>
    </default-return-value>
      <body_node>
        <block>
          <instructions>
            <sequence_node size='1'>
              <evaluation_node>
                <function_call_node name='g'>
                <arguments>
                    <sequence_node size='1'>
                      <rvalue_node>
                          <variable_node>s</variable_node>
                      </rvalue_node>
                    </sequence_node>
                </arguments>
                </function_call_node>
              </evaluation_node>
            </sequence_node>
          </instructions>
        </block>
      </body_node>
  </function_definition_node>
  <function_definition_node name='g' qualifier='public' type='integer'>
    <args>
      <sequence_node size='1'>
      </sequence_node>
    </args>
    <default-return-value>
      <integer_node>14</integer_node>
    </default-return-value>
      <body_node>
        <block>
          <instructions>
            <sequence_node size='1'>
              <write_node new-line='false'>
                <sequence_node size='1'>
                  <rvalue_node>
                      <variable_node>n</variable_node>
                  </rvalue_node>
                </sequence_node>
              </write_node>
            </sequence_node>
          </instructions>
        </block>
      </body_node>
  </function_definition_node>
  <function_definition_node name='fir' qualifier='public' type='integer'>
    <args>
      <sequence_node size='0'>
      </sequence_node>
    </args>
    <default-return-value>
      <integer_node>0</integer_node>
    </default-return-value>
      <body_node>
        <block>
          <instructions>
            <sequence_node size='1'>
              <write_node new-line='false'>
                <sequence_node size='1'>
                  <function_call_node name='f'>
                  <arguments>
                      <sequence_node size='1'>
                        <string_node>ola</string_node>
                      </sequence_node>
                  </arguments>
                  </function_call_node>
                </sequence_node>
              </write_node>
            </sequence_node>
          </instructions>
        </block>
      </body_node>
  </function_definition_node>
</sequence_node>
